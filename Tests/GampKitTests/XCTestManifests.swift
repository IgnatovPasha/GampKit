#if !canImport(ObjectiveC)
import XCTest

extension AnalyticsHitTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsHitTypeTests = [
        ("testValues", testValues),
    ]
}

extension AnalyticsParameterEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsParameterEncoderTests = [
        ("testEncode", testEncode),
    ]
}

extension AnalyticsRequestBuilderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsRequestBuilderTests = [
        ("testRequest", testRequest),
    ]
}

extension AnalyticsSessionManagerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsSessionManagerTests = [
        ("testSend", testSend),
    ]
}

extension AnalyticsTrackerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsTrackerTests = [
        ("testError", testError),
        ("testEvent", testEvent),
        ("testException", testException),
        ("testTime", testTime),
    ]
}

extension AnalyticsURLsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnalyticsURLsTests = [
        ("testURLs", testURLs),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AnalyticsHitTypeTests.__allTests__AnalyticsHitTypeTests),
        testCase(AnalyticsParameterEncoderTests.__allTests__AnalyticsParameterEncoderTests),
        testCase(AnalyticsRequestBuilderTests.__allTests__AnalyticsRequestBuilderTests),
        testCase(AnalyticsSessionManagerTests.__allTests__AnalyticsSessionManagerTests),
        testCase(AnalyticsTrackerTests.__allTests__AnalyticsTrackerTests),
        testCase(AnalyticsURLsTests.__allTests__AnalyticsURLsTests),
    ]
}
#endif
